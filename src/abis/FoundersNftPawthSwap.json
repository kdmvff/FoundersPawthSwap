{
  "contractName": "FoundersNftPawthSwap",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NFT",
          "name": "_founders",
          "type": "address"
        },
        {
          "internalType": "contract ERC",
          "name": "_pawth",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "founders",
      "outputs": [
        {
          "internalType": "contract NFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pawth",
      "outputs": [
        {
          "internalType": "contract ERC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.14+commit.80d49f37\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract NFT\",\"name\":\"_founders\",\"type\":\"address\"},{\"internalType\":\"contract ERC\",\"name\":\"_pawth\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"founders\",\"outputs\":[{\"internalType\":\"contract NFT\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pawth\",\"outputs\":[{\"internalType\":\"contract ERC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/src/contracts/Swap.sol\":\"FoundersNftPawthSwap\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x74216d303b87202736b6d571fc3e9b530aa98ff017a41516170f1c555e518669\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0228d82cef8911972f4cbf7e33dfb9ceebb813d15771335949e06fc0f4a3f1b\",\"dweb:/ipfs/QmYCgp6PABoEe9iDmZTeUc31wp7ekraVavgKF1vVSnd438\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x8e93de94c9062ebc94fb7e2e3929b0781ac6a2b7772e2f7a59045861c93e5be9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f920a631bf986c610fe573d3c70a2bb6f224f86f4a8550016470c7ee476c9ab5\",\"dweb:/ipfs/QmYzsyVMfnaREKHcHv5RPS8Xg5r1Q38E2SDsGBTnXeFWzb\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0xa66d18b9a85458d28fc3304717964502ae36f7f8a2ff35bc83f6f85d74b03574\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e46c80ea068989111d6103e5521223f9ef337e93de76deed8b03f75c6f7b2797\",\"dweb:/ipfs/QmNoSE6knNfFncdDDLTb3fGR6oSQty1srG96Vsx3E9wQdw\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbcc91eea3f05ba5c425dee7c8ade881f816d4ef050498169547be02c6e9a17fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbbb05266b6f10d1a5ff4d55c7a92164c3631c15eb7a3c67ad3046a0aa002367\",\"dweb:/ipfs/QmSgGfvBCZhha5Jwn9yX2HDPMzN6jrFK8peGTrrHwmxBdJ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/src/contracts/ERC.sol\":{\"keccak256\":\"0x47bcd0fd3d1a9826a1c91fcbaf7a05ed4a48c1f0f7d9e886740fbd024b30dd60\",\"urls\":[\"bzz-raw://986fb7b6a277f30c67a2ea21ea71a108a9a3d69e4870369d4e2a27cf749b08f9\",\"dweb:/ipfs/QmPu8U7Zf8MN2S1w3sQPhCdYCVZ4wRvKzpdFthpVxGswAo\"]},\"project:/src/contracts/NFT.sol\":{\"keccak256\":\"0x471b417040ea88cfa1cd0efd0a290ebde2452d071d79a5ff734b34ecfbbcf411\",\"urls\":[\"bzz-raw://186223d5217b3d3d084040bf69ae2a0ab03a871b4ba0a0ae0d433b8a7f178be9\",\"dweb:/ipfs/QmXGEzNaWrLJGwd5185XfoumYpv4pit6ufcqrNewBs9Azk\"]},\"project:/src/contracts/Swap.sol\":{\"keccak256\":\"0xcef907ac9d698874a45d69be6ae7f95ce22286e6b7c8ed9d4aedb46793fe81f5\",\"urls\":[\"bzz-raw://293b77f7e7697d15aaab99fd5174cbddaa89f8e76ae71f760a3b1f23bb52e2c2\",\"dweb:/ipfs/QmZLTvGy61Ca6vDiknRXQptvW8nD8dytZmfxBpq8NzPU9a\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516103893803806103898339818101604052810190610032919061016d565b816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101ad565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ea826100bf565b9050919050565b60006100fc826100df565b9050919050565b61010c816100f1565b811461011757600080fd5b50565b60008151905061012981610103565b92915050565b600061013a826100df565b9050919050565b61014a8161012f565b811461015557600080fd5b50565b60008151905061016781610141565b92915050565b60008060408385031215610184576101836100ba565b5b60006101928582860161011a565b92505060206101a385828601610158565b9150509250929050565b6101cd806101bc6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063411b007e1461003b578063ba13787f14610059575b600080fd5b610043610077565b6040516100509190610140565b60405180910390f35b61006161009b565b60405161006e919061017c565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101066101016100fc846100c1565b6100e1565b6100c1565b9050919050565b6000610118826100eb565b9050919050565b600061012a8261010d565b9050919050565b61013a8161011f565b82525050565b60006020820190506101556000830184610131565b92915050565b60006101668261010d565b9050919050565b6101768161015b565b82525050565b6000602082019050610191600083018461016d565b9291505056fea2646970667358221220534b680bc744f2cdbf70d82d1ac67f06cc6fec1ae01ea79c6347b7aa9921fa9d64736f6c634300080e0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063411b007e1461003b578063ba13787f14610059575b600080fd5b610043610077565b6040516100509190610140565b60405180910390f35b61006161009b565b60405161006e919061017c565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006101066101016100fc846100c1565b6100e1565b6100c1565b9050919050565b6000610118826100eb565b9050919050565b600061012a8261010d565b9050919050565b61013a8161011f565b82525050565b60006020820190506101556000830184610131565b92915050565b60006101668261010d565b9050919050565b6101768161015b565b82525050565b6000602082019050610191600083018461016d565b9291505056fea2646970667358221220534b680bc744f2cdbf70d82d1ac67f06cc6fec1ae01ea79c6347b7aa9921fa9d64736f6c634300080e0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2004:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:16",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:16"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:16"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:16",
                "type": ""
              }
            ],
            "src": "7:75:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:16"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:16",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:16",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:16"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:16",
                "type": ""
              }
            ],
            "src": "334:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:16",
                "type": ""
              }
            ],
            "src": "466:96:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "625:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "635:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "664:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "646:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "646:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "635:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_NFT_$2888",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "607:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "617:7:16",
                "type": ""
              }
            ],
            "src": "568:108:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "737:91:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "806:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "815:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "818:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "808:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "808:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "808:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "760:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "797:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_NFT_$2888",
                              "nodeType": "YulIdentifier",
                              "src": "767:29:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "767:36:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "757:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "757:47:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:55:16"
                  },
                  "nodeType": "YulIf",
                  "src": "747:75:16"
                }
              ]
            },
            "name": "validator_revert_t_contract$_NFT_$2888",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "730:5:16",
                "type": ""
              }
            ],
            "src": "682:146:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "909:92:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "919:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "934:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "928:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "928:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "919:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "989:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_NFT_$2888",
                      "nodeType": "YulIdentifier",
                      "src": "950:38:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "950:45:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "950:45:16"
                }
              ]
            },
            "name": "abi_decode_t_contract$_NFT_$2888_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "887:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "895:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "903:5:16",
                "type": ""
              }
            ],
            "src": "834:167:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1064:51:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1074:35:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1103:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1085:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1085:24:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1074:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_ERC_$2778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1046:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1056:7:16",
                "type": ""
              }
            ],
            "src": "1007:108:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1176:91:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1245:16:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1254:1:16",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1257:1:16",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1247:6:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1247:12:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1247:12:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1199:5:16"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1236:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_ERC_$2778",
                              "nodeType": "YulIdentifier",
                              "src": "1206:29:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1206:36:16"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1196:2:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1196:47:16"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1189:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1189:55:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1186:75:16"
                }
              ]
            },
            "name": "validator_revert_t_contract$_ERC_$2778",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1169:5:16",
                "type": ""
              }
            ],
            "src": "1121:146:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1348:92:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1358:22:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1373:6:16"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1367:5:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1367:13:16"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1358:5:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1428:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_ERC_$2778",
                      "nodeType": "YulIdentifier",
                      "src": "1389:38:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:45:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1389:45:16"
                }
              ]
            },
            "name": "abi_decode_t_contract$_ERC_$2778_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1326:6:16",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1334:3:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1342:5:16",
                "type": ""
              }
            ],
            "src": "1273:167:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1564:437:16",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1610:83:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1612:77:16"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1612:79:16"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1612:79:16"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1585:7:16"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1594:9:16"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1581:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1581:23:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1606:2:16",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1577:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:32:16"
                  },
                  "nodeType": "YulIf",
                  "src": "1574:119:16"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1703:140:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1718:15:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1732:1:16",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1722:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1747:86:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1805:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1816:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1801:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1801:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1825:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_NFT_$2888_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1757:43:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1757:76:16"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1747:6:16"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1853:141:16",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1868:16:16",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1882:2:16",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1872:6:16",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1898:86:16",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1956:9:16"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1967:6:16"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1952:3:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1952:22:16"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1976:7:16"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_ERC_$2778_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1908:43:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1908:76:16"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1898:6:16"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_NFT_$2888t_contract$_ERC_$2778_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1526:9:16",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1537:7:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1549:6:16",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1557:6:16",
                "type": ""
              }
            ],
            "src": "1446:555:16"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_NFT_$2888(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_NFT_$2888(value) {\n        if iszero(eq(value, cleanup_t_contract$_NFT_$2888(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_NFT_$2888_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_NFT_$2888(value)\n    }\n\n    function cleanup_t_contract$_ERC_$2778(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC_$2778(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC_$2778(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC_$2778_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC_$2778(value)\n    }\n\n    function abi_decode_tuple_t_contract$_NFT_$2888t_contract$_ERC_$2778_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_NFT_$2888_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_ERC_$2778_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1596:16",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "52:81:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "62:65:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "77:5:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "84:42:16",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "73:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "73:54:16"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "62:7:16"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "34:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "44:7:16",
                "type": ""
              }
            ],
            "src": "7:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "171:28:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "181:12:16",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "188:5:16"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "181:3:16"
                    }
                  ]
                }
              ]
            },
            "name": "identity",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "157:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "167:3:16",
                "type": ""
              }
            ],
            "src": "139:60:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "265:82:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "275:66:16",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "333:5:16"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint160",
                              "nodeType": "YulIdentifier",
                              "src": "315:17:16"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "315:24:16"
                          }
                        ],
                        "functionName": {
                          "name": "identity",
                          "nodeType": "YulIdentifier",
                          "src": "306:8:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "306:34:16"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "288:17:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:53:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "275:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "245:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "255:9:16",
                "type": ""
              }
            ],
            "src": "205:142:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "423:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "467:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "436:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "436:37:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "423:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "393:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "403:9:16",
                "type": ""
              }
            ],
            "src": "353:126:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "557:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "567:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "611:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "580:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "580:37:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "567:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_NFT_$2888_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "537:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "547:9:16",
                "type": ""
              }
            ],
            "src": "485:138:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "706:78:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "723:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "771:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_NFT_$2888_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "728:42:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "728:49:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "716:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "716:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "716:62:16"
                }
              ]
            },
            "name": "abi_encode_t_contract$_NFT_$2888_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "694:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "701:3:16",
                "type": ""
              }
            ],
            "src": "629:155:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "900:136:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "910:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "922:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "933:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "918:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "918:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "910:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1002:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1015:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1026:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1011:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1011:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_NFT_$2888_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "946:55:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "946:83:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "946:83:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_NFT_$2888__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "872:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "884:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "895:4:16",
                "type": ""
              }
            ],
            "src": "790:246:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1114:66:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1124:50:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1168:5:16"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1137:30:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1137:37:16"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1124:9:16"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC_$2778_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1094:5:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1104:9:16",
                "type": ""
              }
            ],
            "src": "1042:138:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1263:78:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1280:3:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1328:5:16"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC_$2778_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1285:42:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1285:49:16"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1273:6:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1273:62:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1273:62:16"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC_$2778_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1251:5:16",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1258:3:16",
                "type": ""
              }
            ],
            "src": "1186:155:16"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1457:136:16",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1467:26:16",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1479:9:16"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1490:2:16",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1475:3:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1475:18:16"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1467:4:16"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1559:6:16"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1572:9:16"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1583:1:16",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1568:3:16"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1568:17:16"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC_$2778_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1503:55:16"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1503:83:16"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1503:83:16"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC_$2778__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1429:9:16",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1441:6:16",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1452:4:16",
                "type": ""
              }
            ],
            "src": "1347:246:16"
          }
        ]
      },
      "contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_NFT_$2888_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_NFT_$2888_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_NFT_$2888_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_NFT_$2888__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_NFT_$2888_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function convert_t_contract$_ERC_$2778_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ERC_$2778_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC_$2778_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC_$2778__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC_$2778_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
      "id": 16,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "134:237:15:-:0;;;258:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;326:9;315:8;;:20;;;;;;;;;;;;;;;;;;354:6;346:5;;:14;;;;;;;;;;;;;;;;;;258:110;;134:237;;88:117:16;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:108::-;617:7;646:24;664:5;646:24;:::i;:::-;635:35;;568:108;;;:::o;682:146::-;767:36;797:5;767:36;:::i;:::-;760:5;757:47;747:75;;818:1;815;808:12;747:75;682:146;:::o;834:167::-;903:5;934:6;928:13;919:22;;950:45;989:5;950:45;:::i;:::-;834:167;;;;:::o;1007:108::-;1056:7;1085:24;1103:5;1085:24;:::i;:::-;1074:35;;1007:108;;;:::o;1121:146::-;1206:36;1236:5;1206:36;:::i;:::-;1199:5;1196:47;1186:75;;1257:1;1254;1247:12;1186:75;1121:146;:::o;1273:167::-;1342:5;1373:6;1367:13;1358:22;;1389:45;1428:5;1389:45;:::i;:::-;1273:167;;;;:::o;1446:555::-;1549:6;1557;1606:2;1594:9;1585:7;1581:23;1577:32;1574:119;;;1612:79;;:::i;:::-;1574:119;1732:1;1757:76;1825:7;1816:6;1805:9;1801:22;1757:76;:::i;:::-;1747:86;;1703:140;1882:2;1908:76;1976:7;1967:6;1956:9;1952:22;1908:76;:::i;:::-;1898:86;;1853:141;1446:555;;;;;:::o;134:237:15:-;;;;;;;",
  "deployedSourceMap": "134:237:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;205:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;231:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;205:19;;;;;;;;;;;;:::o;231:16::-;;;;;;;;;;;;;:::o;7:126:16:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:138::-;547:9;580:37;611:5;580:37;:::i;:::-;567:50;;485:138;;;:::o;629:155::-;728:49;771:5;728:49;:::i;:::-;723:3;716:62;629:155;;:::o;790:246::-;895:4;933:2;922:9;918:18;910:26;;946:83;1026:1;1015:9;1011:17;1002:6;946:83;:::i;:::-;790:246;;;;:::o;1042:138::-;1104:9;1137:37;1168:5;1137:37;:::i;:::-;1124:50;;1042:138;;;:::o;1186:155::-;1285:49;1328:5;1285:49;:::i;:::-;1280:3;1273:62;1186:155;;:::o;1347:246::-;1452:4;1490:2;1479:9;1475:18;1467:26;;1503:83;1583:1;1572:9;1568:17;1559:6;1503:83;:::i;:::-;1347:246;;;;:::o",
  "source": "pragma solidity ^0.8.0;\r\n\r\n\r\n\r\nimport '@openzeppelin/contracts/utils/math/SafeMath.sol';\r\nimport './NFT.sol';\r\nimport './ERC.sol';\r\n\r\ncontract FoundersNftPawthSwap  {\r\n    using SafeMath for uint256;\r\n    NFT public founders;\r\n    ERC public pawth;\r\n\r\n\r\n    constructor(NFT _founders, ERC _pawth) public {\r\n        founders = _founders;\r\n        pawth = _pawth;\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\kdmcg\\Documents\\practice_solidity\\defi_tutorial\\src\\contracts\\Swap.sol",
  "ast": {
    "absolutePath": "project:/src/contracts/Swap.sol",
    "exportedSymbols": {
      "Address": [
        2384
      ],
      "Context": [
        2406
      ],
      "ERC": [
        2778
      ],
      "ERC1155": [
        1222
      ],
      "ERC165": [
        2430
      ],
      "ERC20": [
        1986
      ],
      "FoundersNftPawthSwap": [
        2921
      ],
      "IERC1155": [
        1344
      ],
      "IERC1155MetadataURI": [
        1400
      ],
      "IERC1155Receiver": [
        1385
      ],
      "IERC165": [
        2442
      ],
      "IERC20": [
        2064
      ],
      "IERC20Metadata": [
        2089
      ],
      "NFT": [
        2888
      ],
      "SafeMath": [
        2754
      ]
    },
    "id": 2922,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2890,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2891,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2922,
        "sourceUnit": 2755,
        "src": "31:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/NFT.sol",
        "file": "./NFT.sol",
        "id": 2892,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2922,
        "sourceUnit": 2889,
        "src": "90:19:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/src/contracts/ERC.sol",
        "file": "./ERC.sol",
        "id": 2893,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2922,
        "sourceUnit": 2779,
        "src": "111:19:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FoundersNftPawthSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2921,
        "linearizedBaseContracts": [
          2921
        ],
        "name": "FoundersNftPawthSwap",
        "nameLocation": "143:20:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2896,
            "libraryName": {
              "id": 2894,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2754,
              "src": "178:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "172:27:15",
            "typeName": {
              "id": 2895,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "191:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "411b007e",
            "id": 2899,
            "mutability": "mutable",
            "name": "founders",
            "nameLocation": "216:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 2921,
            "src": "205:19:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NFT_$2888",
              "typeString": "contract NFT"
            },
            "typeName": {
              "id": 2898,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2897,
                "name": "NFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2888,
                "src": "205:3:15"
              },
              "referencedDeclaration": 2888,
              "src": "205:3:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFT_$2888",
                "typeString": "contract NFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "ba13787f",
            "id": 2902,
            "mutability": "mutable",
            "name": "pawth",
            "nameLocation": "242:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 2921,
            "src": "231:16:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC_$2778",
              "typeString": "contract ERC"
            },
            "typeName": {
              "id": 2901,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2900,
                "name": "ERC",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2778,
                "src": "231:3:15"
              },
              "referencedDeclaration": 2778,
              "src": "231:3:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC_$2778",
                "typeString": "contract ERC"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 2919,
              "nodeType": "Block",
              "src": "304:64:15",
              "statements": [
                {
                  "expression": {
                    "id": 2913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2911,
                      "name": "founders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2899,
                      "src": "315:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$2888",
                        "typeString": "contract NFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2912,
                      "name": "_founders",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2905,
                      "src": "326:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NFT_$2888",
                        "typeString": "contract NFT"
                      }
                    },
                    "src": "315:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$2888",
                      "typeString": "contract NFT"
                    }
                  },
                  "id": 2914,
                  "nodeType": "ExpressionStatement",
                  "src": "315:20:15"
                },
                {
                  "expression": {
                    "id": 2917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2915,
                      "name": "pawth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2902,
                      "src": "346:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC_$2778",
                        "typeString": "contract ERC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2916,
                      "name": "_pawth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2908,
                      "src": "354:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC_$2778",
                        "typeString": "contract ERC"
                      }
                    },
                    "src": "346:14:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC_$2778",
                      "typeString": "contract ERC"
                    }
                  },
                  "id": 2918,
                  "nodeType": "ExpressionStatement",
                  "src": "346:14:15"
                }
              ]
            },
            "id": 2920,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2909,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2905,
                  "mutability": "mutable",
                  "name": "_founders",
                  "nameLocation": "274:9:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2920,
                  "src": "270:13:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NFT_$2888",
                    "typeString": "contract NFT"
                  },
                  "typeName": {
                    "id": 2904,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2903,
                      "name": "NFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2888,
                      "src": "270:3:15"
                    },
                    "referencedDeclaration": 2888,
                    "src": "270:3:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NFT_$2888",
                      "typeString": "contract NFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2908,
                  "mutability": "mutable",
                  "name": "_pawth",
                  "nameLocation": "289:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2920,
                  "src": "285:10:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC_$2778",
                    "typeString": "contract ERC"
                  },
                  "typeName": {
                    "id": 2907,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2906,
                      "name": "ERC",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2778,
                      "src": "285:3:15"
                    },
                    "referencedDeclaration": 2778,
                    "src": "285:3:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC_$2778",
                      "typeString": "contract ERC"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "269:27:15"
            },
            "returnParameters": {
              "id": 2910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "304:0:15"
            },
            "scope": 2921,
            "src": "258:110:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2922,
        "src": "134:237:15",
        "usedErrors": []
      }
    ],
    "src": "0:371:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.14+commit.80d49f37.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-08T21:55:38.071Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}